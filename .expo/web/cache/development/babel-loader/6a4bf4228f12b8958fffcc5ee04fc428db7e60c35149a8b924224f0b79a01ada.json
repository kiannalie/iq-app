{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport CircleBackground from \"../../components/atoms/CircleBackground\";\nimport CustomButton from \"../../components/atoms/CustomButton\";\nimport CustomTextInput from \"../../components/atoms/CustomTextInput\";\nimport { COLORS, FONT_SIZES, SPACING } from \"../../utils/constants\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width;\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    signUp = _useAuth.signUp,\n    signInWithGoogle = _useAuth.signInWithGoogle;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!username.trim() || !email.trim() || !password.trim()) {\n        Alert.alert('Error', 'Please fill in all fields');\n        return;\n      }\n      setLoading(true);\n      try {\n        yield signUp(email, password, username);\n        navigation.navigate('Onboarding');\n      } catch (error) {\n        console.error('Sign up failed:', error);\n        Alert.alert('Error', 'Sign up failed. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleGoogleSignIn = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        yield signInWithGoogle();\n        navigation.navigate('Onboarding');\n      } catch (error) {\n        console.error('Google Sign In failed:', error);\n        Alert.alert('Error', 'Google Sign In failed. Please try again.');\n      }\n    });\n    return function handleGoogleSignIn() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    contentContainerStyle: styles.contentContainer,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \"SIGN UP\"\n    }), _jsx(View, {\n      style: styles.circleContainer,\n      children: _jsx(CircleBackground, {\n        size: screenWidth * 0.5\n      })\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsx(CustomTextInput, {\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: setUsername,\n        style: styles.input,\n        autoCapitalize: \"none\"\n      }), _jsx(CustomTextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        style: styles.input,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\"\n      }), _jsx(CustomTextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        style: styles.input,\n        secureTextEntry: true\n      }), _jsx(CustomButton, {\n        title: \"Create your account\",\n        onPress: handleSignUp,\n        variant: \"secondary\",\n        style: styles.createButton,\n        disabled: loading\n      }), _jsx(CustomButton, {\n        title: \"Sign in with Google\",\n        onPress: handleGoogleSignIn,\n        variant: \"google\",\n        style: styles.googleButton\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary\n  },\n  contentContainer: {\n    flexGrow: 1,\n    paddingHorizontal: SPACING.xl,\n    paddingTop: SPACING.xxl * 2,\n    paddingBottom: SPACING.xl\n  },\n  headerText: {\n    fontSize: FONT_SIZES.large,\n    color: COLORS.white,\n    fontWeight: '600',\n    textAlign: 'center',\n    marginBottom: SPACING.xl\n  },\n  circleContainer: {\n    alignItems: 'center',\n    marginBottom: SPACING.xl\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    gap: SPACING.md\n  },\n  input: {\n    marginBottom: SPACING.sm\n  },\n  createButton: {\n    marginTop: SPACING.md,\n    marginBottom: SPACING.sm\n  },\n  googleButton: {\n    marginBottom: SPACING.xl\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","Dimensions","ScrollView","Alert","useAuth","CircleBackground","CustomButton","CustomTextInput","COLORS","FONT_SIZES","SPACING","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","SignUpScreen","_ref","navigation","_useAuth","signUp","signInWithGoogle","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","handleSignUp","_ref2","_asyncToGenerator","trim","alert","navigate","error","console","apply","arguments","handleGoogleSignIn","_ref3","style","styles","container","contentContainerStyle","contentContainer","children","headerText","circleContainer","size","formContainer","placeholder","value","onChangeText","input","autoCapitalize","keyboardType","secureTextEntry","title","onPress","variant","createButton","disabled","googleButton","create","flex","backgroundColor","primary","flexGrow","paddingHorizontal","xl","paddingTop","xxl","paddingBottom","fontSize","large","color","white","fontWeight","textAlign","marginBottom","alignItems","justifyContent","gap","md","sm","marginTop"],"sources":["/Users/kiannaliesarmiento/myCode/IQapp/src/screens/auth/SignUpScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Text, Dimensions, ScrollView, Alert } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { AuthStackParamList } from '../../navigation/AuthNavigator';\nimport { useAuth } from '../../context/AuthContext';\nimport CircleBackground from '../../components/atoms/CircleBackground';\nimport CustomButton from '../../components/atoms/CustomButton';\nimport CustomTextInput from '../../components/atoms/CustomTextInput';\nimport { COLORS, FONT_SIZES, SPACING } from '../../utils/constants';\n\ntype SignUpScreenNavigationProp = StackNavigationProp<\n  AuthStackParamList,\n  'SignUp'\n>;\n\ninterface Props {\n  navigation: SignUpScreenNavigationProp;\n}\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst SignUpScreen: React.FC<Props> = ({ navigation }) => {\n  const { signUp, signInWithGoogle } = useAuth();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSignUp = async () => {\n    if (!username.trim() || !email.trim() || !password.trim()) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await signUp(email, password, username);\n      navigation.navigate('Onboarding');\n    } catch (error) {\n      console.error('Sign up failed:', error);\n      Alert.alert('Error', 'Sign up failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSignIn = async () => {\n    try {\n      await signInWithGoogle();\n      navigation.navigate('Onboarding');\n    } catch (error) {\n      console.error('Google Sign In failed:', error);\n      Alert.alert('Error', 'Google Sign In failed. Please try again.');\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <Text style={styles.headerText}>SIGN UP</Text>\n\n      <View style={styles.circleContainer}>\n        <CircleBackground size={screenWidth * 0.5} />\n      </View>\n\n      <View style={styles.formContainer}>\n        <CustomTextInput\n          placeholder=\"Username\"\n          value={username}\n          onChangeText={setUsername}\n          style={styles.input}\n          autoCapitalize=\"none\"\n        />\n\n        <CustomTextInput\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={setEmail}\n          style={styles.input}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n        />\n\n        <CustomTextInput\n          placeholder=\"Password\"\n          value={password}\n          onChangeText={setPassword}\n          style={styles.input}\n          secureTextEntry\n        />\n\n        <CustomButton\n          title=\"Create your account\"\n          onPress={handleSignUp}\n          variant=\"secondary\"\n          style={styles.createButton}\n          disabled={loading}\n        />\n\n        <CustomButton\n          title=\"Sign in with Google\"\n          onPress={handleGoogleSignIn}\n          variant=\"google\"\n          style={styles.googleButton}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n  },\n  contentContainer: {\n    flexGrow: 1,\n    paddingHorizontal: SPACING.xl,\n    paddingTop: SPACING.xxl * 2,\n    paddingBottom: SPACING.xl,\n  },\n  headerText: {\n    fontSize: FONT_SIZES.large,\n    color: COLORS.white,\n    fontWeight: '600',\n    textAlign: 'center',\n    marginBottom: SPACING.xl,\n  },\n  circleContainer: {\n    alignItems: 'center',\n    marginBottom: SPACING.xl,\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    gap: SPACING.md,\n  },\n  input: {\n    marginBottom: SPACING.sm,\n  },\n  createButton: {\n    marginTop: SPACING.md,\n    marginBottom: SPACING.sm,\n  },\n  googleButton: {\n    marginBottom: SPACING.xl,\n  },\n});\n\nexport default SignUpScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}