{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { COLORS, SPACING } from \"../../utils/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width;\nvar cardSize = (screenWidth - SPACING.xl * 2 - SPACING.md * 2) / 3;\nvar PodcastCard = function PodcastCard(_ref) {\n  var isSelected = _ref.isSelected,\n    onPress = _ref.onPress,\n    _ref$backgroundColor = _ref.backgroundColor,\n    backgroundColor = _ref$backgroundColor === void 0 ? COLORS.secondary : _ref$backgroundColor;\n  return _jsx(TouchableOpacity, {\n    style: [styles.card, {\n      backgroundColor: backgroundColor,\n      borderColor: isSelected ? COLORS.white : COLORS.transparent\n    }],\n    onPress: onPress,\n    children: _jsx(View, {\n      style: styles.cardContent\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    width: cardSize,\n    height: cardSize,\n    borderRadius: cardSize / 2,\n    borderWidth: 3,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: SPACING.xs\n  },\n  cardContent: {\n    width: '70%',\n    height: '70%',\n    borderRadius: 8,\n    backgroundColor: COLORS.primary,\n    opacity: 0.3\n  }\n});\nexport default PodcastCard;","map":{"version":3,"names":["React","TouchableOpacity","View","StyleSheet","Dimensions","COLORS","SPACING","jsx","_jsx","_Dimensions$get","get","screenWidth","width","cardSize","xl","md","PodcastCard","_ref","isSelected","onPress","_ref$backgroundColor","backgroundColor","secondary","style","styles","card","borderColor","white","transparent","children","cardContent","create","height","borderRadius","borderWidth","justifyContent","alignItems","margin","xs","primary","opacity"],"sources":["/Users/kiannaliesarmiento/myCode/IQapp/src/components/atoms/PodcastCard.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, View, StyleSheet, Dimensions } from 'react-native';\nimport { COLORS, SPACING } from '../../utils/constants';\n\ninterface PodcastCardProps {\n  isSelected: boolean;\n  onPress: () => void;\n  backgroundColor?: string;\n}\n\nconst { width: screenWidth } = Dimensions.get('window');\nconst cardSize = (screenWidth - SPACING.xl * 2 - SPACING.md * 2) / 3; // 3 cards per row with spacing\n\nconst PodcastCard: React.FC<PodcastCardProps> = ({\n  isSelected,\n  onPress,\n  backgroundColor = COLORS.secondary,\n}) => {\n  return (\n    <TouchableOpacity\n      style={[\n        styles.card,\n        {\n          backgroundColor,\n          borderColor: isSelected ? COLORS.white : COLORS.transparent,\n        },\n      ]}\n      onPress={onPress}\n    >\n      <View style={styles.cardContent} />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: cardSize,\n    height: cardSize,\n    borderRadius: cardSize / 2,\n    borderWidth: 3,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: SPACING.xs,\n  },\n  cardContent: {\n    // Placeholder for podcast image/logo\n    width: '70%',\n    height: '70%',\n    borderRadius: 8,\n    backgroundColor: COLORS.primary,\n    opacity: 0.3,\n  },\n});\n\nexport default PodcastCard;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,MAAM,EAAEC,OAAO;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAQxD,IAAAC,eAAA,GAA+BL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC;EAAxCC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;AACb,IAAMC,QAAQ,GAAG,CAACF,WAAW,GAAGL,OAAO,CAACQ,EAAE,GAAG,CAAC,GAAGR,OAAO,CAACS,EAAE,GAAG,CAAC,IAAI,CAAC;AAEpE,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAIvC;EAAA,IAHJC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IACVC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,oBAAA,GAAAH,IAAA,CACPI,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAGf,MAAM,CAACiB,SAAS,GAAAF,oBAAA;EAElC,OACEZ,IAAA,CAACP,gBAAgB;IACfsB,KAAK,EAAE,CACLC,MAAM,CAACC,IAAI,EACX;MACEJ,eAAe,EAAfA,eAAe;MACfK,WAAW,EAAER,UAAU,GAAGb,MAAM,CAACsB,KAAK,GAAGtB,MAAM,CAACuB;IAClD,CAAC,CACD;IACFT,OAAO,EAAEA,OAAQ;IAAAU,QAAA,EAEjBrB,IAAA,CAACN,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACM;IAAY,CAAE;EAAC,CACnB,CAAC;AAEvB,CAAC;AAED,IAAMN,MAAM,GAAGrB,UAAU,CAAC4B,MAAM,CAAC;EAC/BN,IAAI,EAAE;IACJb,KAAK,EAAEC,QAAQ;IACfmB,MAAM,EAAEnB,QAAQ;IAChBoB,YAAY,EAAEpB,QAAQ,GAAG,CAAC;IAC1BqB,WAAW,EAAE,CAAC;IACdC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE/B,OAAO,CAACgC;EAClB,CAAC;EACDR,WAAW,EAAE;IAEXlB,KAAK,EAAE,KAAK;IACZoB,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE,CAAC;IACfZ,eAAe,EAAEhB,MAAM,CAACkC,OAAO;IAC/BC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAexB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}