{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport CircleBackground from \"../../components/atoms/CircleBackground\";\nimport CustomButton from \"../../components/atoms/CustomButton\";\nimport { COLORS, SPACING } from \"../../utils/constants\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  screenWidth = _Dimensions$get.width;\nvar WelcomeScreen = function WelcomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handleLogin = function handleLogin() {\n    navigation.navigate('Login');\n  };\n  var handleSignUp = function handleSignUp() {\n    navigation.navigate('SignUp');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.circleContainer,\n      children: _jsx(CircleBackground, {\n        size: screenWidth * 0.7\n      })\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(CustomButton, {\n        title: \"LOGIN\",\n        onPress: handleLogin,\n        variant: \"outline\",\n        style: styles.button\n      }), _jsx(CustomButton, {\n        title: \"SIGN UP\",\n        onPress: handleSignUp,\n        variant: \"secondary\",\n        style: styles.button\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: SPACING.xxl * 2\n  },\n  circleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    width: '100%',\n    paddingHorizontal: SPACING.xl,\n    gap: SPACING.md\n  },\n  button: {\n    width: '100%'\n  }\n});\nexport default WelcomeScreen;","map":{"version":3,"names":["React","View","StyleSheet","Dimensions","CircleBackground","CustomButton","COLORS","SPACING","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","screenWidth","width","WelcomeScreen","_ref","navigation","handleLogin","navigate","handleSignUp","style","styles","container","children","circleContainer","size","buttonContainer","title","onPress","variant","button","create","flex","backgroundColor","primary","justifyContent","alignItems","paddingVertical","xxl","paddingHorizontal","xl","gap","md"],"sources":["/Users/kiannaliesarmiento/myCode/IQapp/src/screens/auth/WelcomeScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, Dimensions } from 'react-native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { AuthStackParamList } from '../../navigation/AuthNavigator';\nimport CircleBackground from '../../components/atoms/CircleBackground';\nimport CustomButton from '../../components/atoms/CustomButton';\nimport { COLORS, SPACING } from '../../utils/constants';\n\ntype WelcomeScreenNavigationProp = StackNavigationProp<\n  AuthStackParamList,\n  'Welcome'\n>;\n\ninterface Props {\n  navigation: WelcomeScreenNavigationProp;\n}\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst WelcomeScreen: React.FC<Props> = ({ navigation }) => {\n  const handleLogin = () => {\n    navigation.navigate('Login');\n  };\n\n  const handleSignUp = () => {\n    navigation.navigate('SignUp');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.circleContainer}>\n        <CircleBackground size={screenWidth * 0.7} />\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <CustomButton\n          title=\"LOGIN\"\n          onPress={handleLogin}\n          variant=\"outline\"\n          style={styles.button}\n        />\n        <CustomButton\n          title=\"SIGN UP\"\n          onPress={handleSignUp}\n          variant=\"secondary\"\n          style={styles.button}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.primary,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: SPACING.xxl * 2,\n  },\n  circleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    width: '100%',\n    paddingHorizontal: SPACING.xl,\n    gap: SPACING.md,\n  },\n  button: {\n    width: '100%',\n  },\n});\n\nexport default WelcomeScreen;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAI1B,OAAOC,gBAAgB;AACvB,OAAOC,YAAY;AACnB,SAASC,MAAM,EAAEC,OAAO;AAAgC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAWxD,IAAAC,eAAA,GAA+BT,UAAU,CAACU,GAAG,CAAC,QAAQ,CAAC;EAAxCC,WAAW,GAAAF,eAAA,CAAlBG,KAAK;AAEb,IAAMC,aAA8B,GAAG,SAAjCA,aAA8BA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,UAAU,CAACE,QAAQ,CAAC,OAAO,CAAC;EAC9B,CAAC;EAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBH,UAAU,CAACE,QAAQ,CAAC,QAAQ,CAAC;EAC/B,CAAC;EAED,OACET,KAAA,CAACV,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACR,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,eAAgB;MAAAD,QAAA,EAClChB,IAAA,CAACL,gBAAgB;QAACuB,IAAI,EAAEb,WAAW,GAAG;MAAI,CAAE;IAAC,CACzC,CAAC,EAEPH,KAAA,CAACV,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACK,eAAgB;MAAAH,QAAA,GAClChB,IAAA,CAACJ,YAAY;QACXwB,KAAK,EAAC,OAAO;QACbC,OAAO,EAAEX,WAAY;QACrBY,OAAO,EAAC,SAAS;QACjBT,KAAK,EAAEC,MAAM,CAACS;MAAO,CACtB,CAAC,EACFvB,IAAA,CAACJ,YAAY;QACXwB,KAAK,EAAC,SAAS;QACfC,OAAO,EAAET,YAAa;QACtBU,OAAO,EAAC,WAAW;QACnBT,KAAK,EAAEC,MAAM,CAACS;MAAO,CACtB,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMT,MAAM,GAAGrB,UAAU,CAAC+B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE7B,MAAM,CAAC8B,OAAO;IAC/BC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAEhC,OAAO,CAACiC,GAAG,GAAG;EACjC,CAAC;EACDd,eAAe,EAAE;IACfQ,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDV,eAAe,EAAE;IACfb,KAAK,EAAE,MAAM;IACb0B,iBAAiB,EAAElC,OAAO,CAACmC,EAAE;IAC7BC,GAAG,EAAEpC,OAAO,CAACqC;EACf,CAAC;EACDZ,MAAM,EAAE;IACNjB,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAeC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}